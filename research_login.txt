Local Network:
fritz.box == 192.168.178.1


GET http://192.168.178.1/logincheck.lua HTTP/1.1
GET http://192.168.178.1/login.lua HTTP/1.1 
//blank login.lua


GET http://fritz.box/login_sid.lua HTTP/1.1
<SessionInfo><SID>0000000000000000</SID><Challenge>xxxxxxxx</Challenge><BlockTime>0</BlockTime><Rights></Rights></SessionInfo>
//sid=16digits
//challenge=8digits
//only challenge key is important.

//challenge string [a-f&&0-9]

//example
ASCII = a
Decimal = 97
Hexadecimal = 61
UTF-16LE = 6100

//utf-16LE is just adding two zeros '00' after hexadecimal
//LE stands for Little Endian

//utf-16 encoding
string = "a"
decimal = ord(string) //output is 97
----------------------
//convert decimal to hex without 0x
hexadecimal = sprintf(“%02lx”, $decimal) //ignore for now
----------------------
utf16 = hexadecimal + "00" 

//although you can use unicode('string', 'utf_16'[/utf_16_be/utf_16_le])
//use python's built-in function
binascii.b2a_hex(data)
//example
//input: binascii.b2a_hex("8e70c54e")
//output: '3865373063353465'

//still no utf16 so we need 00 before every 2 digits
//credit goes here: http://stackoverflow.com/a/3258612/1515686
//so we use
t = binascii.b2a_hex(data)
s = '00'.join(t[i:i+2] for i in range(0, len(t), 2))
//important t has to appear like this t = '11223344' not t = 11223344
//output: '380065003700300063003500340065'
//still missing '00' at the really beginning
//just use this easy solution
x = s + '00'
//output: '38006500370030006300350034006500'



//creating challenge response to get a sid (-> login)
challengestr = (extracted from login_sid.lua)
fbpw = 'secret'
challenge_pw = challengestr + "-" + fbpw //none
challenge_pw =~ s/(.)/$1 . chr(0)/eg //ignore that for now
md5 = hashlib.md5(challenge_pw).hexdigest()
challenge_response = challengestr + "-" + md5


//login with challenge_respone
//use requests package?!
//POST 
http://192.168.178.1/login.lua
//with request body content
response={challengestr}-{md5}&page=&username=
OR
response={challenge_respone}&page=&username=

-----------------------------
//alternative
$http_response = $user_agent->get( "http://fritz.box/login_sid.lua?user=&response=$challenge_response");
//todo:check that way out
-----------------------------

//if challenge_response is valid
//getting the sid from fritz.box
Location: http://192.168.178.1/home/home.lua?sid={16digits}
//success - logged in.



Useful Ressources (mostly german):
http://avm.de/fileadmin/user_upload/Global/Service/Schnittstellen/AVM_Technical_Note_-_Session_ID.pdf
http://avm.de/fileadmin/user_upload/Global/Service/Schnittstellen/AHA-HTTP-Interface.pdf
http://avm.de/fileadmin/user_upload/Global/Service/Schnittstellen/IPv6_Technical_Note_de.pdf
http://blog.soldierer.com/2013/08/27/218/
